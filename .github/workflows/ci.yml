name: CI - Build & Test

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

  push:
    branches: [ main ]

jobs:
  build-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build JAR (skip tests)
        run: mvn clean package -DskipTests=true
        working-directory: ./api

  test-api:
    runs-on: ubuntu-latest
    needs: build-api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run Tests
        run: mvn clean install
        working-directory: ./api

  build-front:
    runs-on: ubuntu-latest
    needs: test-api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci
        working-directory: ./spa

      - name: Inject environment variables
        run: |
          echo "export const environment = {
            production: true,
            apiUrl: 'https://catmash-im37.onrender.com/api/cats',
            apiKey: '${{ secrets.API_KEY }}'
          };" > ./spa/src/environments/environment.prod.ts

      - name: Build Angular app
        run: npm run build -- --configuration=production
        working-directory: ./spa

      - name: Upload production build
        uses: actions/upload-artifact@v4
        with:
          name: dist-spa
          path: ./spa/dist/

  deploy-api:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build-front, test-api]
    steps:
      - name: Deploy API on Render
        run: |
          curl --request POST \
               --url https://api.render.com/v1/services/srv-d3nkkn1gv73c73cdjjng/deploys \
               --header 'accept: application/json' \
               --header "authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
               --header 'content-type: application/json' \
               --data '{"clearCache":"do_not_clear"}'

  deploy-front:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [ build-front, test-api ]
    steps:
      - name: Deploy Front on Render
        run: |
          curl --request POST \
               --url https://api.render.com/v1/services/srv-d3p2f0u3jp1c739s6kk0/deploys \
               --header 'accept: application/json' \
               --header "authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
               --header 'content-type: application/json' \
               --data '{"clearCache":"do_not_clear"}'